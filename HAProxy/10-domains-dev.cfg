defaults
    #log global
    timeout connect 10s
    timeout client 3m
    timeout server 1m
    timeout queue 10s
    mode    http
    option  httplog
    option  dontlognull
    option  forwardfor
    option  http-server-close
    stats   enable
    stats   auth admin:scAdmin
    stats   uri /haproxy-stats
    # never fail on address resolution
    default-server init-addr last,libc,none

frontend http-in
    mode    http
    bind    *:80

    # Define hosts
    acl container_api           path_beg        -i /api
    acl container_api           path_beg        -i /v1
    acl container_api           hdr_beg(Host)   -i ws
#    acl hdr_connection_upgrade  hdr(Connection) -i upgrade
#    acl hdr_upgrade_websocket   hdr(Upgrade)    -i websocket

    use_backend container_api   if container_api
#    use_backend container_api   if hdr_connection_upgrade hdr_upgrade_websocket

    default_backend container_web

backend container_web
    mode http
    balance leastconn
    #option httpclose
    option forwardfor
    cookie JSESSIONID prefix
#    server node1 web:3000 cookie A check
#    http-request set-header Host todo.io.s3-website.us-east-2.amazonaws.com
    server web01 web:3000 cookie web01 check

backend container_api
    mode http
#    reqadd X-Forwarded-Proto: https
    timeout server 3600s
    balance leastconn
#    option redispatch
#    option httpchk HEAD /
    #option httpclose
    option forwardfor
    cookie JSESSIONID prefix
    server api01 server:8080 cookie api01 check

    ## websocket protocol validation
#    acl hdr_connection_upgrade hdr(Connection)                 -i upgrade
#    acl hdr_upgrade_websocket  hdr(Upgrade)                    -i websocket
#    acl hdr_websocket_key      hdr_cnt(Sec-WebSocket-Key)      eq 1
#    acl hdr_websocket_version  hdr_cnt(Sec-WebSocket-Version)  eq 1
#    http-request deny if ! hdr_connection_upgrade ! hdr_upgrade_websocket ! hdr_websocket_key ! hdr_websocket_version
    ## ensure our application protocol name is valid
    ## (don't forget to update the list each time you publish new applications)
#    acl ws_valid_protocol hdr(Sec-WebSocket-Protocol) echo-protocol
#    http-request deny if ! ws_valid_protocol

    ## websocket health checking
    #option httpchk GET / HTTP/1.1\r\nHost:\ ws.domain.com\r\nConnection:\ Upgrade\r\nUpgrade:\ websocket\r\nSec-WebSocket-Key:\ haproxy\r\nSec-WebSocket-Version:\ 13\r\nSec-WebSocket-Protocol:\ echo-protocol
    #http-check expect status 101